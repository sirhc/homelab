---
version: "3.8"

services:
  plex:
    image: plexinc/pms-docker:plexpass
    restart: unless-stopped
    environment:
      - ADVERTISE_IP=${PLEX_ADVERTISE_IP}
      - ALLOWED_NETWORKS=${PLEX_ALLOWED_NETWORKS}
      - PLEX_CLAIM
    ports:
      - 1900:1900/udp
      - 3005:3005/tcp
      - 8324:8324/tcp
      - 32400:32400/tcp
      - 32410:32410/udp
      - 32412:32412/udp
      - 32413:32413/udp
      - 32414:32414/udp
      - 32469:32469/tcp
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /dev/shm:/transcode
      - plex_config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.plex.entrypoints=https
      - traefik.http.routers.plex.rule=Host(`plex.${DOMAIN}`)
      - traefik.http.services.plex.loadbalancer.server.port=32400

  sabnzbd:
    image: lscr.io/linuxserver/sabnzbd:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - sabnzbd_config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.sabnzbd.rule=Host(`sabnzbd.${DOMAIN}`)
      - traefik.http.routers.sabnzbd.entrypoints=https
      - traefik.http.services.sabnzbd.loadbalancer.server.port=8080

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - prowlarr_config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=https
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${DOMAIN}`)
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - radarr_config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=https
      - traefik.http.routers.radarr.rule=Host(`radarr.${DOMAIN}`)
      - traefik.http.services.radarr.loadbalancer.server.port=7878

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - sonarr_config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=https
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${DOMAIN}`)
      - traefik.http.services.sonarr.loadbalancer.server.port=8989

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - lidarr_config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.entrypoints=https
      - traefik.http.routers.lidarr.rule=Host(`lidarr.${DOMAIN}`)
      - traefik.http.services.lidarr.loadbalancer.server.port=8686

  readarr:
    image: lscr.io/linuxserver/readarr:develop
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - readarr_config:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.readarr.entrypoints=https
      - traefik.http.routers.readarr.rule=Host(`readarr.${DOMAIN}`)
      - traefik.http.services.readarr.loadbalancer.server.port=8787

  isponsorblocktv:
    image: ghcr.io/dmunozv04/isponsorblocktv
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - isponsorblocktv_data:/app/data
    # command: # only used for initial setup with `docker compose run isponsorblocktv`
    #   - --setup-cli

volumes:
  plex_config:
  sabnzbd_config:
  prowlarr_config:
  radarr_config:
  sonarr_config:
  lidarr_config:
  readarr_config:
  isponsorblocktv_data:
