---
version: "3.8"

services:
  loki:
    image: grafana/loki:2.8.4
    container_name: loki
    restart: unless-stopped
    volumes:
      - loki_data:/loki
      - /etc/localtime:/etc/localtime:ro

  promtail:
    image: grafana/promtail:2.8.4
    container_name: promtail
    restart: unless-stopped
    command:
      - -config.file=/etc/promtail/config.yaml
    volumes:
      - ./config/promtail.yaml:/etc/promtail/config.yaml:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - loki

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - prometheus_data:/prometheus
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.entrypoints=https
      - traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN}`)
      - traefik.http.services.prometheus.loadbalancer.server.port=9090

  prometheus-exporter-openweather:
    image: billykwooten/openweather-exporter:latest
    container_name: prometheus-exporter-openweather
    restart: unless-stopped
    environment:
      - OW_CITY=${OPENWEATHER_CITY}
      - OW_APIKEY=${OPENWEATHER_APIKEY}
    volumes:
      - /etc/localtime:/etc/localtime:ro

  prometheus-exporter-solaredge:
    image: chrisjohnson00/solaredge-prometheus-exporter:latest
    container_name: prometheus-exporter-solaredge
    restart: unless-stopped
    environment:
      - API_KEY=${SOLAREDGE_API_KEY}
    volumes:
      - /etc/localtime:/etc/localtime:ro

  grafana:
    image: grafana/grafana:10.1.1
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_INSTALL_PLUGINS
    volumes:
      - grafana_data:/var/lib/grafana
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.entrypoints=https
      - traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN}`)
      - traefik.http.services.grafana.loadbalancer.server.port=3000

  glances:
    image: nicolargo/glances:latest-full
    container_name: glances
    restart: unless-stopped
    environment:
      - GLANCES_OPT=-w
    volumes:
      - glances_config:/glances/conf
      - /var/run/docker.sock:/var/run/docker.sock
      - /home:/mnt/home:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.glances.entrypoints=https
      - traefik.http.routers.glances.rule=Host(`glances.${DOMAIN}`)
      - traefik.http.services.glances.loadbalancer.server.port=61208
    pid: host

volumes:
  glances_config:
  grafana_data:
  loki_data:
  prometheus_data:
